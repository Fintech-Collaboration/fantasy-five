# Generated by Django 3.1.2 on 2021-10-10 20:21

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sandbox', '0002_auto_20211010_2315'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('price_open', models.FloatField()),
                ('price_high', models.FloatField()),
                ('price_low', models.FloatField()),
                ('price_close', models.FloatField()),
                ('volume_traded', models.FloatField()),
                ('trades_count', models.IntegerField()),
                ('ticker', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Aragon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('price_open', models.FloatField()),
                ('price_high', models.FloatField()),
                ('price_low', models.FloatField()),
                ('price_close', models.FloatField()),
                ('volume_traded', models.FloatField()),
                ('trades_count', models.IntegerField()),
                ('ticker', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Augur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('price_open', models.FloatField()),
                ('price_high', models.FloatField()),
                ('price_low', models.FloatField()),
                ('price_close', models.FloatField()),
                ('volume_traded', models.FloatField()),
                ('trades_count', models.IntegerField()),
                ('ticker', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Balancer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('price_open', models.FloatField()),
                ('price_high', models.FloatField()),
                ('price_low', models.FloatField()),
                ('price_close', models.FloatField()),
                ('volume_traded', models.FloatField()),
                ('trades_count', models.IntegerField()),
                ('ticker', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cardano',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('price_open', models.FloatField()),
                ('price_high', models.FloatField()),
                ('price_low', models.FloatField()),
                ('price_close', models.FloatField()),
                ('volume_traded', models.FloatField()),
                ('trades_count', models.IntegerField()),
                ('ticker', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cosmos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('price_open', models.FloatField()),
                ('price_high', models.FloatField()),
                ('price_low', models.FloatField()),
                ('price_close', models.FloatField()),
                ('volume_traded', models.FloatField()),
                ('trades_count', models.IntegerField()),
                ('ticker', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EthereumClassic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('price_open', models.FloatField()),
                ('price_high', models.FloatField()),
                ('price_low', models.FloatField()),
                ('price_close', models.FloatField()),
                ('volume_traded', models.FloatField()),
                ('trades_count', models.IntegerField()),
                ('ticker', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Orchid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('price_open', models.FloatField()),
                ('price_high', models.FloatField()),
                ('price_low', models.FloatField()),
                ('price_close', models.FloatField()),
                ('volume_traded', models.FloatField()),
                ('trades_count', models.IntegerField()),
                ('ticker', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tether',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('price_open', models.FloatField()),
                ('price_high', models.FloatField()),
                ('price_low', models.FloatField()),
                ('price_close', models.FloatField()),
                ('volume_traded', models.FloatField()),
                ('trades_count', models.IntegerField()),
                ('ticker', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tezos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('price_open', models.FloatField()),
                ('price_high', models.FloatField()),
                ('price_low', models.FloatField()),
                ('price_close', models.FloatField()),
                ('volume_traded', models.FloatField()),
                ('trades_count', models.IntegerField()),
                ('ticker', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='OHLCV',
        ),
    ]
